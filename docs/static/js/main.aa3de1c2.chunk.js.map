{"version":3,"sources":["services/data.js","components/Header.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","App.js","index.js"],"names":["data","fetch","then","response","json","Header","className","src","alt","Filters","props","inputSearch","type","placeholder","onChange","CharacterCard","character","key","id","image","name","species","CharacterList","query","filter","myCharacter","toLowerCase","includes","map","index","App","state","bind","this","getData","setState","results","e","value","currentTarget","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQASeA,EANF,WACX,OAAOC,MAHP,uFAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAF,GAAI,OAAIA,MCMHK,EAVA,WACb,OACE,yBACEC,UAAU,YACVC,IAAI,sBACJC,IAAI,yBCSKC,EAdC,SAAAC,GAAU,IAChBC,EAAgBD,EAAhBC,YACR,OACE,yBAAKL,UAAU,mBACb,2BACEA,UAAU,QACVM,KAAK,SACLC,YAAY,iCACZC,SAAUH,MCOHI,EAfO,SAAAL,GAAU,IACtBM,EAAcN,EAAdM,UACR,OACE,wBAAIV,UAAU,eAAeW,IAAKD,EAAUE,IAC1C,yBACEZ,UAAU,qBACVC,IAAKS,EAAUG,MACfX,IAAKQ,EAAUI,OAEjB,wBAAId,UAAU,qBAAqBU,EAAUI,MAC7C,uBAAGd,UAAU,uBAAuBU,EAAUK,WCMrCC,EAfO,SAAAZ,GAAU,IACtBM,EAAqBN,EAArBM,UAAWO,EAAUb,EAAVa,MACnB,OACE,wBAAIjB,UAAU,aACXU,EACEQ,QAAO,SAAAC,GAAW,OACjBA,EAAYL,KAAKM,cAAcC,SAASJ,EAAMG,kBAE/CE,KAAI,SAACZ,EAAWa,GACf,OAAO,kBAAC,EAAD,CAAeZ,IAAKY,EAAOb,UAAWA,SCkCxCc,G,kBAtCb,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KACDqB,MAAQ,CACX/B,KAAM,GACNuB,MAAO,IAET,EAAKZ,YAAc,EAAKA,YAAYqB,KAAjB,gBANF,E,iFAUjBC,KAAKC,Y,gCAGI,IAAD,OACRlC,IAAOE,MAAK,SAAAF,GACV,EAAKmC,SAAS,CACZnC,KAAMA,EAAKoC,e,kCAKLC,GACV,IAAMC,EAAQD,EAAEE,cAAcD,MAC9BL,KAAKE,SAAS,CAAEZ,MAAOe,M,+BAGf,IAAD,EACiBL,KAAKF,MAArB/B,EADD,EACCA,KAAMuB,EADP,EACOA,MACd,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASK,YAAasB,KAAKtB,cAC3B,kBAAC,EAAD,CAAeK,UAAWhB,EAAMuB,MAAOA,S,GAjC7BiB,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.aa3de1c2.chunk.js","sourcesContent":["const URL =\n  \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\";\n\nconst data = () => {\n  return fetch(URL)\n    .then(response => response.json())\n    .then(data => data);\n};\n\nexport default data;\n","import React from \"react\";\n\nconst Header = () => {\n  return (\n    <img\n      className=\"home-logo\"\n      src=\"./official-logo.png\"\n      alt=\"EvaluaciÃ³n final\"\n    />\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Filters = props => {\n  const { inputSearch } = props;\n  return (\n    <div className=\"input-container\">\n      <input\n        className=\"input\"\n        type=\"search\"\n        placeholder=\"search your favorite character\"\n        onChange={inputSearch}\n      />\n    </div>\n  );\n};\n\nexport default Filters;\n","import React from \"react\";\n\nconst CharacterCard = props => {\n  const { character } = props;\n  return (\n    <li className=\"App__List--c\" key={character.id}>\n      <img\n        className=\"App__List--c-photo\"\n        src={character.image}\n        alt={character.name}\n      />\n      <h2 className=\"App__List--c-name\">{character.name}</h2>\n      <p className=\"App__List--c-specie\">{character.species}</p>\n    </li>\n  );\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\n\nconst CharacterList = props => {\n  const { character, query } = props;\n  return (\n    <ul className=\"App__List\">\n      {character\n        .filter(myCharacter =>\n          myCharacter.name.toLowerCase().includes(query.toLowerCase())\n        )\n        .map((character, index) => {\n          return <CharacterCard key={index} character={character} />;\n        })}\n    </ul>\n  );\n};\n\nexport default CharacterList;\n","import React from \"react\";\nimport data from \"./services/data\";\nimport Header from \"./components/Header\";\nimport Filters from \"./components/Filters\";\nimport CharacterList from \"./components/CharacterList\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      query: \"\"\n    };\n    this.inputSearch = this.inputSearch.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    data().then(data => {\n      this.setState({\n        data: data.results\n      });\n    });\n  }\n\n  inputSearch(e) {\n    const value = e.currentTarget.value;\n    this.setState({ query: value });\n  }\n\n  render() {\n    const { data, query } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Filters inputSearch={this.inputSearch} />\n        <CharacterList character={data} query={query} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}